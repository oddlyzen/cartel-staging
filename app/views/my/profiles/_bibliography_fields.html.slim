fieldset.nested-fields
  = f.hidden_field :_destroy, value: false, class: "destroy-me"
  hr.-thin
  - if f.object.new_record? || f.object.pdf_url.present?
    .row
      .col-xs-6.col-xs-offset-4
        .bibliography-upload
          - if f.object.new_record?
            p File Name: .
            = f.filepicker_field :pdf_url,
              button_text: 'Upload Your Full Bibliography Here in PDF',
              button_class: 'btn btn-default btn-block', extensions: '.pdf',
              multiple: false, onchange: 'bibliographyUpload(event)'
            = f.hidden_field :pdf_filename, class: "bibliography-pdf-filename"

          - else
            = link_to "PDF: #{f.object.pdf_filename}", f.object.pdf_url, target: '_blank'
    - if f.object.new_record?
      .row
        .col-xs-6.col-xs-push-4
          p.text-center OR fill in the details below
  - if f.object.new_record? || f.object.pdf_url.blank?
    .row
      .col-xs-4.bibliography-dates
        .form-inline
          = f.input :day, label: false, collection: 1..31, prompt: 'Date', input_html: { class: "date #{'error' if params[:errors].present? && params[:errors]['bibliographies.day'].present?}" }
          = f.input :month, label: false, collection: Month.collection_options, prompt: 'Month', input_html: { class: "month #{'error' if params[:errors].present? && params[:errors]['bibliographies.month'].present?}" }
          = f.input :year, label: false, collection: Year.collection_options, prompt: 'Year', input_html: { class: "month #{'error' if params[:errors].present? && params[:errors]['bibliographies.year'].present?}" }

      .col-xs-6.bibliography-fields
        = f.input :source_type, label: false, collection: options_for_enum(Bibliography.source_types), include_blank: false, prompt: 'Type'
        = f.input :author, label: false, required: false, placeholder: 'Author*'
        = f.input :title, label: false, required: false, placeholder: 'Title*', input_html: { class: "#{ 'error' if params[:errors] && params[:errors]['bibliographies.title'].present?}" }
        = f.input :review_of, label: false, required: false, placeholder: 'Review of'
        = f.input :publication_title, label: false, required: false, placeholder: 'Publication Title'
        = f.input :publisher, label: false, required: false, placeholder: 'Publisher', input_html: { class: "#{ 'error' if params[:errors] && params[:errors]['bibliographies.publisher'].present?}" }
        = f.input :edition, label: false, required: false, placeholder: 'Edition'
        = f.input :location, label: false, required: false, placeholder: 'Location'
        = f.input :volume, label: false, required: false, placeholder: 'Volume'
        = f.input :issue, label: false, required: false, placeholder: 'Issue'
        = f.input :page_number, label: false, required: false, placeholder: 'Page Number'
        = f.input :link, label: false, required: false, placeholder: 'Link'
        - if f.object.attachment_url.blank?
          = f.filepicker_field :attachment_url, button_text: 'Upload PDF', button_class: 'btn btn-default btn-block', extensions: '.pdf', multiple: false
        - else
          = link_to 'PDF Link', f.object.attachment_url, target: '_blank'
  = link_to_remove_association fa_icon('minus').html_safe + ' Remove', f

/ = f.input :location, label: false, required: false, placeholder: 'Location' -> to add?
